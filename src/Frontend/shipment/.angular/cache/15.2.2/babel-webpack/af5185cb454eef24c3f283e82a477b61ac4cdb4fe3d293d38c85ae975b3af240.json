{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/quote.service\";\nimport * as i2 from \"@angular/common\";\nfunction QuotesComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const quote_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r4 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r3.author);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r3.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r3.dateAdded);\n  }\n}\nfunction QuotesComponent_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const quote_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r6 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r5.author);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r5.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r5.dateAdded);\n  }\n}\nfunction QuotesComponent_tr_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const quote_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r8 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r7.author);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r7.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r7.dateAdded);\n  }\n}\nexport class QuotesComponent {\n  constructor(_quoteService) {\n    this._quoteService = _quoteService;\n    this.quotes = [];\n    this.shortQuotes = [];\n    this.mediumQotes = [];\n    this.largeQuotes = [];\n    this._Fetch30Quotes();\n  }\n  _Fetch30Quotes() {\n    this._quoteService.GetQuotes().subscribe(result => {\n      this.quotes = result.results;\n      this.quotes.forEach(quote => {\n        if (quote.content.length < 10) {\n          this.shortQuotes.push(quote);\n        } else if (quote.content.length <= 20) {\n          this.mediumQotes.push(quote);\n        } else {\n          this.largeQuotes.push(quote);\n        }\n      });\n    }, () => {\n      alert('Unable to fetch quotes list!!');\n    });\n  }\n}\nQuotesComponent.ɵfac = function QuotesComponent_Factory(t) {\n  return new (t || QuotesComponent)(i0.ɵɵdirectiveInject(i1.QuoteService));\n};\nQuotesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuotesComponent,\n  selectors: [[\"app-quotes\"]],\n  decls: 42,\n  vars: 3,\n  consts: [[1, \"table\", \"table-bordered\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"]],\n  template: function QuotesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h4\");\n      i0.ɵɵtext(1, \"Quotes by - Albert Einstein\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"br\");\n      i0.ɵɵelementStart(3, \"table\", 0)(4, \"thead\")(5, \"tr\")(6, \"th\", 1);\n      i0.ɵɵtext(7, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 1);\n      i0.ɵɵtext(9, \"Author\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 1);\n      i0.ɵɵtext(11, \"Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 1);\n      i0.ɵɵtext(13, \"Date Added\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"tbody\");\n      i0.ɵɵtemplate(15, QuotesComponent_tr_15_Template, 9, 4, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"table\", 0)(17, \"thead\")(18, \"tr\")(19, \"th\", 1);\n      i0.ɵɵtext(20, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\", 1);\n      i0.ɵɵtext(22, \"Author\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\", 1);\n      i0.ɵɵtext(24, \"Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\", 1);\n      i0.ɵɵtext(26, \"Date Added\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"tbody\");\n      i0.ɵɵtemplate(28, QuotesComponent_tr_28_Template, 9, 4, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"table\", 0)(30, \"thead\")(31, \"tr\")(32, \"th\", 1);\n      i0.ɵɵtext(33, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"th\", 1);\n      i0.ɵɵtext(35, \"Author\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"th\", 1);\n      i0.ɵɵtext(37, \"Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"th\", 1);\n      i0.ɵɵtext(39, \"Date Added\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(40, \"tbody\");\n      i0.ɵɵtemplate(41, QuotesComponent_tr_41_Template, 9, 4, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.shortQuotes);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.mediumQotes);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.largeQuotes);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","QuotesComponent","constructor","_quoteService","_Fetch30Quotes","GetQuotes","subscribe","result","quotes","results","forEach","quote","content","length","shortQuotes","push","mediumQotes","largeQuotes","alert","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Pratice\\Sample Codes\\Shipment\\src\\Frontend\\shipment\\src\\app\\quotes\\quotes.component.html","D:\\Pratice\\Sample Codes\\Shipment\\src\\Frontend\\shipment\\src\\app\\quotes\\quotes.component.ts"],"sourcesContent":["\n<h4>Quotes by - Albert Einstein</h4>\n<br>\n\n<table class=\"table table-bordered\" >\n  <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">Author</th>\n      <th scope=\"col\">Content</th>\n      <th scope=\"col\">Date Added</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr  *ngFor=\"let quote of shortQuotes;index as i;\">\n      <th scope=\"row\">{{i+1}}</th>\n      <td>{{quote.author}}</td>\n      <td>{{quote.content}}</td>\n      <td>{{quote.dateAdded}}</td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n<table class=\"table table-bordered\" >\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Author</th>\n        <th scope=\"col\">Content</th>\n        <th scope=\"col\">Date Added</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr  *ngFor=\"let quote of mediumQotes;index as i;\">\n        <th scope=\"row\">{{i+1}}</th>\n        <td>{{quote.author}}</td>\n        <td>{{quote.content}}</td>\n        <td>{{quote.dateAdded}}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  \n<table class=\"table table-bordered\" >\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Author</th>\n        <th scope=\"col\">Content</th>\n        <th scope=\"col\">Date Added</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr  *ngFor=\"let quote of largeQuotes;index as i;\">\n        <th scope=\"row\">{{i+1}}</th>\n        <td>{{quote.author}}</td>\n        <td>{{quote.content}}</td>\n        <td>{{quote.dateAdded}}</td>\n      </tr>\n    </tbody>\n  </table>","import { Component } from '@angular/core';\nimport { QuoteService } from '../services/quote.service';\n\n@Component({\n  selector: 'app-quotes',\n  templateUrl: './quotes.component.html',\n  styleUrls: ['./quotes.component.css']\n})\nexport class QuotesComponent {\n\n  public quotes: any[] = [];\n  public shortQuotes: any[] = [];\n  public mediumQotes: any[] = [];\n  public largeQuotes: any[] = [];\n\n  constructor(private _quoteService: QuoteService) {\n    this._Fetch30Quotes();\n  }\n\n  private _Fetch30Quotes(): void{\n    this._quoteService.GetQuotes()\n    .subscribe(\n      (result: any) =>{\n          this.quotes = result.results;\n\n          this.quotes.forEach(quote => {\n               if(quote.content.length < 10){\n                   this.shortQuotes.push(quote);\n               }else if(quote.content.length <= 20){\n                this.mediumQotes.push(quote);\n               }else{\n                this.largeQuotes.push(quote);\n               }\n          });\n      },\n      ()=>{\n          alert('Unable to fetch quotes list!!');\n      }\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}